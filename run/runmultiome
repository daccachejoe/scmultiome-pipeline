#!/bin/bash

export conda_env_name=sc-multiome-pipeline-env
export my_macs_path=/gpfs/data/naiklab/jd5457/opt/MACS/bin/macs3
export project_prefix=multiome-control-skin
export personal_anaconda_path=/gpfs/data/ruggleslab/jd5457/miniconda/miniconda/etc/profile.d/conda.sh
export sceasy_env_name=sceasy-joe
export UCD_env_name=ucdenv
export scenicplus_env_name=scenicplus
export create_cistarget_databases_env_name=create_cistarget_databases
export create_cistarget_databases_dir=/gpfs/home/jd5457/.conda/envs/create_cisTarget_databases/

detect_scheduler() {
    # change this to be some SLURM variable present in the login node
    if [ ! -z "$SLURM_JOB_ID" ]; then
        echo "SLURM detected"
        export SCHEDULER="slurm"
    elif [ ! -z "$$LSF_ENVDIR" ]; then
        echo "LSF detected"
        export SCHEDULER="lsf"
    else
        echo "No known job scheduler detected"
        export SCHEDULER="none"
    fi
}

submit_job() {
    local script=$1
    local output=$2
    local time=$3
    local mem=$4
    local cores=$5

    if [ "$SCHEDULER" == "slurm" ]; then
        time=0-$time:00
        sbatch -c $cores -p a100_short --mem-per-cpu $mem -o $output -t $time --export=ALL $script
    elif [ "$SCHEDULER" == "lsf" ]; then
        bsub -P acc_naiklab -q premium -n $cores -R "rusage[mem=$mem]" -o $output -W $time $script
    else
        echo "No job scheduler available to submit job: $script"
    fi
}

init() {
    echo "Initializing environment"
    bash routes/setup_dirs.sh
    bash routes/install.sh
}

seurat_preprocess() {
    echo "Running seurat preprocessing"
    submit_job routes/seurat_preprocess.sh scripts/outs/preprocessing-%J.out 12:00 24000 32
}

filter_and_cluster() {
    echo "Running filtering and clustering"
    submit_job routes/filter_and_cluster.sh scripts/outs/filter-and-cluster-%J.out 12:00 24000 32
}

identify_celltypes() {
    echo "Helping identify cell types"
    submit_job routes/identify_celltypes.sh scripts/outs/identify-celltypes-%J.out 12:00 24000 32
}

label_celltypes() {
    echo "Labelling cell types with user inputs"
    submit_job routes/label_celltypes.sh scripts/outs/label-celltypes-%J.out 12:00 24000 32
}

call_peaks_grouped() {
    echo "Calling ATAC-Seq peaks grouped by cell type"
    submit_job routes/call_peaks_grouped.sh scripts/outs/callpeaks-grouped-%J.out 12:00 24000 32
}

run_scenicplus() {
    echo "Running SCENIC+"
    submit_job routes/run_scenicplus.sh scripts/outs/scenicplus-%J.out 12:00 24000 32
}

run_multiome() {
    # Check if the argument is provided
    if [ $# -eq 0 ]; then
        echo "Please provide an argument to specify which function to run."
        exit 1
    fi

    # Run the specified function based on the argument
    "$1"
}

# Detect the scheduler before running any jobs
detect_scheduler

# Call the run_multiome function with the provided argument
run_multiome "$1"


